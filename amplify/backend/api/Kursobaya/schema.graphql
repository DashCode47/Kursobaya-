type Comments @model @auth(rules: [{ allow: public }]) {
  id: ID!
  text: String
  image: String
  postID: ID! @index(name: "byPost")
  userID: ID! @index(name: "byUser")
}

type Post @model @auth(rules: [{ allow: public }]) {
  id: ID!
  title: String
  description: String
  image: String
  nofLikes: Int
  nofComments: Int
  Comments: [Comments] @hasMany(indexName: "byPost", fields: ["id"])
  block: String
  userID: ID! @index(name: "byUser")
  type: String!
    @index(
      name: "byType"
      queryField: "PostsByType"
      sortKeyFields: ["createdAt"]
    )
  createdAt: AWSDateTime!
}

type User @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String
  UserComments: [Comments] @hasMany(indexName: "byUser", fields: ["id"])
  UserPosts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  UserMessages: [Messages] @hasMany(indexName: "byUser", fields: ["id"])
}

type ChatRoom @model @auth(rules: [{ allow: public }]) {
  id: ID!
  block: String!
  name: String
  image: String
  Messages: [Messages] @hasMany(indexName: "byChatRoom", fields: ["id"])
}

type Messages @model @auth(rules: [{ allow: public }]) {
  id: ID!
  text: String
  createdAt: AWSDateTime!
  chatroomID: ID!
    @index(
      name: "byChatRoom"
      sortKeyFields: ["createdAt"]
      queryField: "listMessagesByChatRoom"
    )
  userID: ID! @index(name: "byUser")
}
 